# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: http://docs.resin.io/deployment/docker-templates/
# and about resin base images here: http://docs.resin.io/runtime/resin-base-images/
# Note the node:slim image doesn't have node-gyp
FROM resin/%%RESIN_MACHINE_NAME%%-node

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install -y \
  iceweasel dropbear xserver-xorg-core xserver-xorg-video-fbdev x11-xserver-utils \
  libgl1-mesa-dri \
  matchbox-window-manager openvpn xautomation feh \
  && apt-get clean && rm -rf /var/lib/apt/lists/*
  
# Defines our working directory in container
WORKDIR /usr/src/app

# Copies the package.json first for better cache on later pushes
COPY package.json package.json

# This install npm dependencies on the resin.io build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --production --unsafe-perm && npm install forever -g && npm cache verify && rm -rf /tmp/*

ADD dot-mozilla /root/.mozilla


# This will copy all files in our root to the working  directory in the container
COPY . ./

# Enable systemd init system in container
ENV INITSYSTEM on


# server.js will run when container starts up on the device
CMD ["bash", "run"]
